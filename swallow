#!/usr/bin/env bash
# dwm swallowing for bspwm

case_event(){
	case $1 in
		node_add) swallow ;;
		node_remove) spit ;;
	esac
}

swallow() {
	query_desktop || return 1
	query_swallower || return 1
	query_swallowing || return 1
	hide_node
}

spit() {
	query_spitting || return 1
	query_spitting_desktop || pull_node_desktop
	show_node
}

hide_node(){
	bspc node "$last_node" --flag hidden=on
	swallowed+=("$new_node $last_node")
}

show_node(){
	bspc node "$node_spit" --flag hidden=off
	bspc node "$node_spit" -f
	unset 'swallowed[i]'
}

query_desktop(){
	last_desktop=$(bspc query -D -n last)
	[[ "$desktop" = "$last_desktop" ]] || false
}

query_spitting_desktop(){
	spitting_desktop=$(bspc query -D -n "$node_spit")
	[[ "$spitting_desktop" = "$desktop" ]] || false
}

pull_node_desktop(){
	bspc node "$node_spit" -d "$desktop"
}

query_swallower(){
	app=$(probe "$new_node")
	: ${SWALLOW_APPLICATIONS:-$applications}
	[[ "${_,,}" =~ ${app,,} ]] || false
}

query_swallowing(){
	term=$(probe "$last_node")
	: "${SWALLOW_TERMINALS:-$terminals}"
	[[ "${_,,}" =~ ${term,,} ]] || false
}

query_spitting(){
	for ((i=0;i<${#swallowed[@]};i++)); do
		[[ "${swallowed[i]}" =~ ^$last_node ]] || continue
		set ${swallowed[i]}
		node_spit="$2"
		return 0
	done
	return 1
}

get_defaults(){
	terminals="st urxvt kitty"
	for app in "image/*" "application/pdf" "video/*"; do
		: "$(xdg-mime query default $app)"
		applications+="${_%.*}"
	done
}

probe(){
	IFS=$'\n' while read -rd '' line; do
		[[ "$line" =~ WM_CLASS ]] || continue
		: ${line%\"*}
		printf '%s' "${_#*\"}"
	done < <(xprop -id "$1")
}

define_elements(){
	last_node=$4
	new_node=$5
	desktop=$3
}

get_defaults

while read -r -a evt; do
	define_elements "${evt[@]}"
	case_event "${evt[0]}"
done < <(bspc subscribe node_add node_remove)
